// Code generated by protoc-gen-go. DO NOT EDIT.
// source: svc/jobs.proto

/*
Package svc is a generated protocol buffer package.

It is generated from these files:
	svc/jobs.proto
	svc/svc.proto

It has these top-level messages:
	JobSummary
	JobStatus
	CreateJobInput
	CreateJobOutput
	ListJobsInput
	ListJobsOutput
	InspectJobInput
	InspectJobOutput
	DeleteJobInput
	DeleteJobOutput
	JobLogsInput
	JobLogsOutput
	Env
*/
package svc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type JobSummary struct {
	Name      string     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Status    *JobStatus `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	CreatedAt uint64     `protobuf:"varint,3,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *JobSummary) Reset()                    { *m = JobSummary{} }
func (m *JobSummary) String() string            { return proto.CompactTextString(m) }
func (*JobSummary) ProtoMessage()               {}
func (*JobSummary) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *JobSummary) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JobSummary) GetStatus() *JobStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *JobSummary) GetCreatedAt() uint64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

type JobStatus struct {
	Active    uint32 `protobuf:"varint,1,opt,name=active" json:"active,omitempty"`
	Succeeded uint32 `protobuf:"varint,2,opt,name=succeeded" json:"succeeded,omitempty"`
	Failed    uint32 `protobuf:"varint,3,opt,name=failed" json:"failed,omitempty"`
}

func (m *JobStatus) Reset()                    { *m = JobStatus{} }
func (m *JobStatus) String() string            { return proto.CompactTextString(m) }
func (*JobStatus) ProtoMessage()               {}
func (*JobStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *JobStatus) GetActive() uint32 {
	if m != nil {
		return m.Active
	}
	return 0
}

func (m *JobStatus) GetSucceeded() uint32 {
	if m != nil {
		return m.Succeeded
	}
	return 0
}

func (m *JobStatus) GetFailed() uint32 {
	if m != nil {
		return m.Failed
	}
	return 0
}

// Create
type CreateJobInput struct {
	Name    string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Project string   `protobuf:"bytes,2,opt,name=project" json:"project,omitempty"`
	Image   string   `protobuf:"bytes,3,opt,name=image" json:"image,omitempty"`
	Size    uint64   `protobuf:"varint,4,opt,name=size" json:"size,omitempty"`
	Inputs  []string `protobuf:"bytes,5,rep,name=inputs" json:"inputs,omitempty"`
	Command []string `protobuf:"bytes,6,rep,name=command" json:"command,omitempty"`
	Env     []*Env   `protobuf:"bytes,7,rep,name=env" json:"env,omitempty"`
}

func (m *CreateJobInput) Reset()                    { *m = CreateJobInput{} }
func (m *CreateJobInput) String() string            { return proto.CompactTextString(m) }
func (*CreateJobInput) ProtoMessage()               {}
func (*CreateJobInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateJobInput) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateJobInput) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *CreateJobInput) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *CreateJobInput) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *CreateJobInput) GetInputs() []string {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *CreateJobInput) GetCommand() []string {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *CreateJobInput) GetEnv() []*Env {
	if m != nil {
		return m.Env
	}
	return nil
}

type CreateJobOutput struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *CreateJobOutput) Reset()                    { *m = CreateJobOutput{} }
func (m *CreateJobOutput) String() string            { return proto.CompactTextString(m) }
func (*CreateJobOutput) ProtoMessage()               {}
func (*CreateJobOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateJobOutput) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// List
type ListJobsInput struct {
	Project string `protobuf:"bytes,2,opt,name=project" json:"project,omitempty"`
}

func (m *ListJobsInput) Reset()                    { *m = ListJobsInput{} }
func (m *ListJobsInput) String() string            { return proto.CompactTextString(m) }
func (*ListJobsInput) ProtoMessage()               {}
func (*ListJobsInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListJobsInput) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

type ListJobsOutput struct {
	Results []*JobSummary `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (m *ListJobsOutput) Reset()                    { *m = ListJobsOutput{} }
func (m *ListJobsOutput) String() string            { return proto.CompactTextString(m) }
func (*ListJobsOutput) ProtoMessage()               {}
func (*ListJobsOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ListJobsOutput) GetResults() []*JobSummary {
	if m != nil {
		return m.Results
	}
	return nil
}

// Inspect
type InspectJobInput struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Project string `protobuf:"bytes,2,opt,name=project" json:"project,omitempty"`
}

func (m *InspectJobInput) Reset()                    { *m = InspectJobInput{} }
func (m *InspectJobInput) String() string            { return proto.CompactTextString(m) }
func (*InspectJobInput) ProtoMessage()               {}
func (*InspectJobInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *InspectJobInput) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InspectJobInput) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

type InspectJobOutput struct {
	Name      string     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Project   string     `protobuf:"bytes,2,opt,name=project" json:"project,omitempty"`
	Image     string     `protobuf:"bytes,3,opt,name=image" json:"image,omitempty"`
	Size      uint64     `protobuf:"varint,4,opt,name=size" json:"size,omitempty"`
	Inputs    []string   `protobuf:"bytes,5,rep,name=inputs" json:"inputs,omitempty"`
	Outputs   []string   `protobuf:"bytes,6,rep,name=outputs" json:"outputs,omitempty"`
	CreatedAt uint64     `protobuf:"varint,7,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Status    *JobStatus `protobuf:"bytes,8,opt,name=status" json:"status,omitempty"`
}

func (m *InspectJobOutput) Reset()                    { *m = InspectJobOutput{} }
func (m *InspectJobOutput) String() string            { return proto.CompactTextString(m) }
func (*InspectJobOutput) ProtoMessage()               {}
func (*InspectJobOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *InspectJobOutput) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InspectJobOutput) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *InspectJobOutput) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *InspectJobOutput) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *InspectJobOutput) GetInputs() []string {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *InspectJobOutput) GetOutputs() []string {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *InspectJobOutput) GetCreatedAt() uint64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *InspectJobOutput) GetStatus() *JobStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// Delete
type DeleteJobInput struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Project string `protobuf:"bytes,2,opt,name=project" json:"project,omitempty"`
}

func (m *DeleteJobInput) Reset()                    { *m = DeleteJobInput{} }
func (m *DeleteJobInput) String() string            { return proto.CompactTextString(m) }
func (*DeleteJobInput) ProtoMessage()               {}
func (*DeleteJobInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DeleteJobInput) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteJobInput) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

type DeleteJobOutput struct {
}

func (m *DeleteJobOutput) Reset()                    { *m = DeleteJobOutput{} }
func (m *DeleteJobOutput) String() string            { return proto.CompactTextString(m) }
func (*DeleteJobOutput) ProtoMessage()               {}
func (*DeleteJobOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

// Logs
type JobLogsInput struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Project string `protobuf:"bytes,2,opt,name=project" json:"project,omitempty"`
}

func (m *JobLogsInput) Reset()                    { *m = JobLogsInput{} }
func (m *JobLogsInput) String() string            { return proto.CompactTextString(m) }
func (*JobLogsInput) ProtoMessage()               {}
func (*JobLogsInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *JobLogsInput) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JobLogsInput) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

type JobLogsOutput struct {
	Lines []string `protobuf:"bytes,1,rep,name=lines" json:"lines,omitempty"`
}

func (m *JobLogsOutput) Reset()                    { *m = JobLogsOutput{} }
func (m *JobLogsOutput) String() string            { return proto.CompactTextString(m) }
func (*JobLogsOutput) ProtoMessage()               {}
func (*JobLogsOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *JobLogsOutput) GetLines() []string {
	if m != nil {
		return m.Lines
	}
	return nil
}

func init() {
	proto.RegisterType((*JobSummary)(nil), "svc.JobSummary")
	proto.RegisterType((*JobStatus)(nil), "svc.JobStatus")
	proto.RegisterType((*CreateJobInput)(nil), "svc.CreateJobInput")
	proto.RegisterType((*CreateJobOutput)(nil), "svc.CreateJobOutput")
	proto.RegisterType((*ListJobsInput)(nil), "svc.ListJobsInput")
	proto.RegisterType((*ListJobsOutput)(nil), "svc.ListJobsOutput")
	proto.RegisterType((*InspectJobInput)(nil), "svc.InspectJobInput")
	proto.RegisterType((*InspectJobOutput)(nil), "svc.InspectJobOutput")
	proto.RegisterType((*DeleteJobInput)(nil), "svc.DeleteJobInput")
	proto.RegisterType((*DeleteJobOutput)(nil), "svc.DeleteJobOutput")
	proto.RegisterType((*JobLogsInput)(nil), "svc.JobLogsInput")
	proto.RegisterType((*JobLogsOutput)(nil), "svc.JobLogsOutput")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Jobs service

type JobsClient interface {
	Create(ctx context.Context, in *CreateJobInput, opts ...grpc.CallOption) (*CreateJobOutput, error)
	List(ctx context.Context, in *ListJobsInput, opts ...grpc.CallOption) (*ListJobsOutput, error)
	Inspect(ctx context.Context, in *InspectJobInput, opts ...grpc.CallOption) (*InspectJobOutput, error)
	Delete(ctx context.Context, in *DeleteJobInput, opts ...grpc.CallOption) (*DeleteJobOutput, error)
	Logs(ctx context.Context, in *JobLogsInput, opts ...grpc.CallOption) (*JobLogsOutput, error)
}

type jobsClient struct {
	cc *grpc.ClientConn
}

func NewJobsClient(cc *grpc.ClientConn) JobsClient {
	return &jobsClient{cc}
}

func (c *jobsClient) Create(ctx context.Context, in *CreateJobInput, opts ...grpc.CallOption) (*CreateJobOutput, error) {
	out := new(CreateJobOutput)
	err := grpc.Invoke(ctx, "/svc.Jobs/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobsClient) List(ctx context.Context, in *ListJobsInput, opts ...grpc.CallOption) (*ListJobsOutput, error) {
	out := new(ListJobsOutput)
	err := grpc.Invoke(ctx, "/svc.Jobs/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobsClient) Inspect(ctx context.Context, in *InspectJobInput, opts ...grpc.CallOption) (*InspectJobOutput, error) {
	out := new(InspectJobOutput)
	err := grpc.Invoke(ctx, "/svc.Jobs/Inspect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobsClient) Delete(ctx context.Context, in *DeleteJobInput, opts ...grpc.CallOption) (*DeleteJobOutput, error) {
	out := new(DeleteJobOutput)
	err := grpc.Invoke(ctx, "/svc.Jobs/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobsClient) Logs(ctx context.Context, in *JobLogsInput, opts ...grpc.CallOption) (*JobLogsOutput, error) {
	out := new(JobLogsOutput)
	err := grpc.Invoke(ctx, "/svc.Jobs/Logs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Jobs service

type JobsServer interface {
	Create(context.Context, *CreateJobInput) (*CreateJobOutput, error)
	List(context.Context, *ListJobsInput) (*ListJobsOutput, error)
	Inspect(context.Context, *InspectJobInput) (*InspectJobOutput, error)
	Delete(context.Context, *DeleteJobInput) (*DeleteJobOutput, error)
	Logs(context.Context, *JobLogsInput) (*JobLogsOutput, error)
}

func RegisterJobsServer(s *grpc.Server, srv JobsServer) {
	s.RegisterService(&_Jobs_serviceDesc, srv)
}

func _Jobs_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateJobInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/svc.Jobs/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServer).Create(ctx, req.(*CreateJobInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jobs_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListJobsInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/svc.Jobs/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServer).List(ctx, req.(*ListJobsInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jobs_Inspect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InspectJobInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServer).Inspect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/svc.Jobs/Inspect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServer).Inspect(ctx, req.(*InspectJobInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jobs_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteJobInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/svc.Jobs/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServer).Delete(ctx, req.(*DeleteJobInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jobs_Logs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobLogsInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServer).Logs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/svc.Jobs/Logs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServer).Logs(ctx, req.(*JobLogsInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _Jobs_serviceDesc = grpc.ServiceDesc{
	ServiceName: "svc.Jobs",
	HandlerType: (*JobsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Jobs_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Jobs_List_Handler,
		},
		{
			MethodName: "Inspect",
			Handler:    _Jobs_Inspect_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Jobs_Delete_Handler,
		},
		{
			MethodName: "Logs",
			Handler:    _Jobs_Logs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "svc/jobs.proto",
}

func init() { proto.RegisterFile("svc/jobs.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 525 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xdd, 0x8a, 0xd3, 0x40,
	0x14, 0x26, 0xdb, 0x34, 0xdd, 0x9c, 0x35, 0xad, 0x3b, 0x5b, 0x25, 0x04, 0x85, 0x32, 0xb0, 0x92,
	0xbd, 0x70, 0x17, 0x5a, 0xf0, 0x46, 0x51, 0x44, 0xbd, 0xd8, 0xb2, 0x20, 0x8c, 0x57, 0x5e, 0x49,
	0x32, 0x19, 0x4b, 0x96, 0x26, 0x53, 0x32, 0x93, 0x80, 0x3e, 0x81, 0x4f, 0xe4, 0x0b, 0xf9, 0x22,
	0x32, 0x3f, 0xc9, 0x6e, 0x82, 0xf5, 0xa2, 0xb0, 0x77, 0x39, 0xdf, 0x99, 0xf3, 0x9d, 0x73, 0xbe,
	0xf3, 0xb5, 0x30, 0x15, 0x0d, 0xbd, 0xba, 0xe5, 0xa9, 0xb8, 0xdc, 0x55, 0x5c, 0x72, 0x34, 0x12,
	0x0d, 0x8d, 0x02, 0x05, 0x8a, 0x86, 0x1a, 0x0c, 0x6f, 0x00, 0xd6, 0x3c, 0xfd, 0x52, 0x17, 0x45,
	0x52, 0xfd, 0x40, 0x08, 0xdc, 0x32, 0x29, 0x58, 0xe8, 0x2c, 0x9c, 0xd8, 0x27, 0xfa, 0x1b, 0xbd,
	0x00, 0x4f, 0xc8, 0x44, 0xd6, 0x22, 0x3c, 0x5a, 0x38, 0xf1, 0xc9, 0x72, 0x7a, 0xa9, 0xaa, 0x55,
	0x91, 0x46, 0x89, 0xcd, 0xa2, 0xe7, 0x00, 0xb4, 0x62, 0x89, 0x64, 0xd9, 0xb7, 0x44, 0x86, 0xa3,
	0x85, 0x13, 0xbb, 0xc4, 0xb7, 0xc8, 0x7b, 0x89, 0xbf, 0x82, 0xdf, 0xd5, 0xa0, 0xa7, 0xe0, 0x25,
	0x54, 0xe6, 0x8d, 0xe9, 0x14, 0x10, 0x1b, 0xa1, 0x67, 0xe0, 0x8b, 0x9a, 0x52, 0xc6, 0x32, 0x96,
	0xe9, 0x76, 0x01, 0xb9, 0x03, 0x54, 0xd5, 0xf7, 0x24, 0xdf, 0xb2, 0x4c, 0xb3, 0x07, 0xc4, 0x46,
	0xf8, 0xb7, 0x03, 0xd3, 0x0f, 0xba, 0xd1, 0x9a, 0xa7, 0xd7, 0xe5, 0xae, 0x96, 0xff, 0x5c, 0x24,
	0x84, 0xc9, 0xae, 0xe2, 0xb7, 0x8c, 0x4a, 0x4d, 0xed, 0x93, 0x36, 0x44, 0x73, 0x18, 0xe7, 0x45,
	0xb2, 0x61, 0x9a, 0xd7, 0x27, 0x26, 0x50, 0x1c, 0x22, 0xff, 0xc9, 0x42, 0x57, 0xaf, 0xa2, 0xbf,
	0xd5, 0x08, 0xb9, 0x6a, 0x20, 0xc2, 0xf1, 0x62, 0x14, 0xfb, 0xc4, 0x46, 0x8a, 0x9b, 0xf2, 0xa2,
	0x48, 0xca, 0x2c, 0xf4, 0x74, 0xa2, 0x0d, 0x51, 0x04, 0x23, 0x56, 0x36, 0xe1, 0x64, 0x31, 0x8a,
	0x4f, 0x96, 0xc7, 0x5a, 0xbb, 0x4f, 0x65, 0x43, 0x14, 0x88, 0xcf, 0x61, 0xd6, 0xcd, 0xfd, 0xb9,
	0x96, 0x7b, 0x06, 0xc7, 0x17, 0x10, 0xdc, 0xe4, 0x42, 0xae, 0x79, 0x2a, 0xcc, 0x76, 0x7b, 0x37,
	0xc1, 0xaf, 0x61, 0xda, 0x3e, 0xb5, 0x84, 0x17, 0x30, 0xa9, 0x98, 0xa8, 0xb7, 0x52, 0x84, 0x8e,
	0x9e, 0x61, 0xd6, 0xdd, 0xcf, 0x1c, 0x9d, 0xb4, 0x79, 0xfc, 0x0e, 0x66, 0xd7, 0xa5, 0xd8, 0x31,
	0x2a, 0x0f, 0xd3, 0x11, 0xff, 0x71, 0xe0, 0xf1, 0x1d, 0xc3, 0xfe, 0x8d, 0x1e, 0xfa, 0x14, 0x5c,
	0x77, 0x16, 0xed, 0x29, 0x6c, 0x38, 0x70, 0xe8, 0x64, 0xe0, 0xd0, 0x7b, 0x46, 0x3f, 0xfe, 0x9f,
	0xd1, 0xf1, 0x5b, 0x98, 0x7e, 0x64, 0x5b, 0x76, 0xa8, 0xdb, 0xf0, 0x29, 0xcc, 0xba, 0x7a, 0xa3,
	0x11, 0x7e, 0x03, 0x8f, 0xd6, 0x3c, 0xbd, 0xe1, 0x1b, 0x71, 0x08, 0xe1, 0x39, 0x04, 0xb6, 0xda,
	0x4a, 0x3e, 0x87, 0xf1, 0x36, 0x2f, 0x99, 0xb9, 0xb8, 0x4f, 0x4c, 0xb0, 0xfc, 0x75, 0x04, 0xae,
	0x32, 0x06, 0x5a, 0x81, 0x67, 0x6c, 0x87, 0xce, 0xf4, 0x8a, 0xfd, 0xdf, 0x4e, 0x34, 0xef, 0x83,
	0x96, 0xf3, 0x0a, 0x5c, 0xe5, 0x2c, 0x84, 0x74, 0xb6, 0xe7, 0xc7, 0xe8, 0xac, 0x87, 0xd9, 0x82,
	0x57, 0x30, 0xb1, 0x5e, 0x40, 0x86, 0x71, 0xe0, 0xad, 0xe8, 0xc9, 0x00, 0xb5, 0x75, 0x2b, 0xf0,
	0x8c, 0x3c, 0x76, 0xba, 0xbe, 0xd6, 0x76, 0xba, 0x81, 0x80, 0xe8, 0x25, 0xb8, 0x6a, 0x7f, 0x74,
	0xda, 0xde, 0xac, 0xd3, 0x32, 0x42, 0xf7, 0x21, 0xf3, 0x3c, 0xf5, 0xf4, 0x9f, 0xdf, 0xea, 0x6f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x02, 0x5c, 0xf0, 0xdf, 0x22, 0x05, 0x00, 0x00,
}
